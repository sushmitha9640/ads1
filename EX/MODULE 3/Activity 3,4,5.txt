ACTIVITY - 3

Give tilde approximations for the following quantities
1.	N + 1   				A   N
2.	1 + 1/N				A   1

3.	(1 + 1/N )(1 + 2/N )		A   1

4.	2N^3 - 15 N^2 + N		A   2N^3    

5.	lg(2N )/lg N			A    log(n)

6.	lg(N^2 + 1) / lg N		A    0


ACTIVITY - 4

Code-1:     int count = 0;
            for(int i = 0; i < N; i++){
                count++;
            }
           
	A   N

    Code-2:           int sum = 0;
            if(sum == 0){
                sum++;
}

A   1


Code-3:           for(int i = N; i > 0; i < N/2){
            int sum = 0;
}

A     1    



    Code-4:           for(int i = 0; i < N; i++){
                for(int j = 0; j < N; j++){
                    System.out.println(“Hello”);
                }
            }


        A     N^2


    Code-5:    for(int i = 0; i < N; i++){
                for(int j = 0; j < N; j = j * 2){
                    System.out.println(“Hello”);
                }
            }
          
A     N

    Code-6:     public int fibonacci(int number) {
if (number <= 1) {
                     return number;
                } else {
                         return fibonacci(number - 1) + fibonacci(number - 2);
                }
}


A       1


 ACTIVITY - 6

Code-1:     int sum = 0;
        for (int n = N; n > 0; n /= 2)
            for(int i = 0; i < n; i++)
                Sum++;

        
A     n log(n)

Code-2:    int sum = 0;
        for (int i = 1 i < N; i *= 2)
            for (int j = 0; j < i; j++)
                sum++;

A          

Code-3:    int sum = 0;
        for (int i = 1 i < N; i *= 2)
            for (int j = 0; j < N; j++)
                Sum++;

       